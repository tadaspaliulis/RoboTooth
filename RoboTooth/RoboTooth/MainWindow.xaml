<Window x:Class="RoboTooth.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RoboTooth"
        mc:Ignorable="d"
        Title="RoboController" Height="850" Width="600"
        xmlns:ViewModel="clr-namespace:RoboTooth.ViewModel"
        xmlns:View="clr-namespace:RoboTooth.View">

    <Window.Resources>
        <Style TargetType="Border" x:Key="HeaderBorderStyle">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
        </Style>
        <Style TargetType="Border" x:Key="CellBorderStyle">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Gray"/>
        </Style>
        <ViewModel:IdColourValueConverter x:Key="IdColourValueConverter"/>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0">
            <TextBlock x:Name="ConnectionStatus"
                       Text="{Binding Path=ConnectionManagement.TextStatus, UpdateSourceTrigger=PropertyChanged}"
                       HorizontalAlignment="Left"
                       Margin="10,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="58" Width="117"/>
            <View:BasicButton Button="{Binding ConnectionManagement.ConnectionButton}"
                              HorizontalAlignment="Stretch"
                              Margin="5"
                              MinHeight="15"/>
        </StackPanel>

        <StackPanel Grid.Column="1" Margin="2">
            <!-- Received message list view-->
            <ListView  Height="200" HorizontalAlignment="Stretch" MaxWidth="1000" Margin="0,5,5,5" SelectionMode="Single" ItemsSource="{Binding Path=RawMessageList, UpdateSourceTrigger=PropertyChanged}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="ID" Width="Auto">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid Margin="-6,0,-6,0" Background="{Binding Id, Converter={StaticResource IdColourValueConverter}}">
                                        <TextBlock Text="{Binding Id}" Margin="6,0,6,0"/>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Raw Data" DisplayMemberBinding="{Binding RawData}" Width="200"/>
                    </GridView>
                </ListView.View>
            </ListView>

            <DockPanel Height="25">
                <Label DockPanel.Dock="Left" Content="Sensor Data"/>
                <Separator/>
            </DockPanel>

            <StackPanel Orientation="Horizontal" Margin="0,4,0,4">
                <Label Content="Distance:"/>
                <TextBox IsReadOnly="True" MinWidth="40" VerticalContentAlignment="Center" Text="{Binding IntDataDisplay.EchoDistanceValue}"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0,4,0,4">
                <Label Content="X:"/>
                <TextBox IsReadOnly="True" MinWidth="20" VerticalContentAlignment="Center" Text="{Binding IntDataDisplay.MagnetometerOrientationXValue}"/>
                <Label Content="Y:"/>
                <TextBox IsReadOnly="True" MinWidth="20" VerticalContentAlignment="Center" Text="{Binding IntDataDisplay.MagnetometerOrientationYValue}"/>
                <Label Content="Z:"/>
                <TextBox IsReadOnly="True" MinWidth="20" VerticalContentAlignment="Center" Text="{Binding IntDataDisplay.MagnetometerOrientationZValue}"/>
            </StackPanel>

            <DockPanel Height="25">
                <Label DockPanel.Dock="Left" Content="Basic Controls"/>
                <Separator/>
            </DockPanel>

            <View:BasicButton Text="Movement Sequence Test"
                    HorizontalAlignment="Left"
                    Margin="5"
                    Button="{Binding MovementSequenceTestButton}"/>

            <!-- Position Controls -->
            <StackPanel Orientation="Horizontal">
                <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Right">
                    <Label Content="Internal Position X:" HorizontalAlignment="Right"  Margin="0,2,0,2"/>
                    <Label Content="Target Position X:" HorizontalAlignment="Right"  Margin="0,2,0,0"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="0,4,0,4">
                    <StackPanel Orientation="Horizontal" Margin="0,4,0,4">
                        <TextBox IsReadOnly="True" MinWidth="40" VerticalContentAlignment="Center" Text="{Binding IntDataDisplay.PositionX}"/>
                        <Label Content="Y:"/>
                        <TextBox IsReadOnly="True" MinWidth="40" VerticalContentAlignment="Center" Text="{Binding IntDataDisplay.PositionY}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBox MinWidth="40" VerticalContentAlignment="Center" Text="{Binding IntDataDisplay.TargetPositionX}"/>
                        <Label Content="Y:"/>
                        <TextBox MinWidth="40" VerticalContentAlignment="Center" Text="{Binding IntDataDisplay.TargetPositionY}"/>
                    </StackPanel>
                </StackPanel>
                <View:BasicButton Text="Set Target"
                        Button="{Binding SetMovementTargetButton}"
                        Margin="8" VerticalAlignment="Stretch"/>
            </StackPanel>

            <View:WorldCanvas Canvas="{Binding Canvas}"/>
        </StackPanel>
    </Grid>
</Window>
